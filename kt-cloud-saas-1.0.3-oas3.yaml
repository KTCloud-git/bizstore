---
openapi: 3.0.3
info:
  title: KT Cloud BizOffice 서비스 API
  version: 2.1.2
servers:
- url: https://연동대상시스템의 URL
  description: https를 사용해야 하며 SSL 인증서를 KT Cloud 포탈에 공유해야합니다. 연동대상시스템의 IP는 하나로 지정하여 통신합니다.
paths:
  /status/{mem-sq}:
    get:
      tags:
      - status-management
      summary: 서비스 상태값 조회
      description: 고객의 서비스 상태값 조회 
      responses:
        "200":
          description: 유효한 요청에 대한 올바른 응답
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses'
  /customers/:
    post:
      tags:
      - customer-management
      summary: 서비스 신청, SSO 연동 관련 API.
      description: 고객정보를 연동대상시스템으로 전달하여 서비스 신청
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customer-body'
      responses:
        "302":
          description: Redirect
          headers:
            Location:
              description: "앞으로 고객이 접속할 페이지"
              schema:
                type: string
                format: uri
       default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses'   
    
    /customer/change-status/:
      put:
        tags:
        - customer-management
        summary: 이용 정지
        description: 고객의 이용 상태 변경에 대한 처리를 함. 
        requestBody:
          content:
            "application/json":
              schema:
                required:
                  - "e-mail"
                  - "status"
                properties:
                  e-mail:
                    type: string
                    example: honggildong@kt.com
                  status:
                    type: string
                    enum: ["이용재개", "이용중지"]
        response:
          "200":
            description: "정상 응답"
            content:
              "application/json":
                schema:
                  required:
                    - "result"
                    - "description"
                  properties:
                    result:
                      type: enum
                      enum: ["succeed","fail"]
                    description:
                      type: string
                      example: "ㅇㅇㅇ가 잘못되었습니다. 상세하게 표현할 것."
    /customer/change-service/:
      put:
        tags:
        - customer service management
        summary: 서비스 변경 
        description: 고객이 소유한 서비스를 변경하도록 함. 
        requestBody:
          content:
            "application/json":
              schema:
                required:
                  - "e-mail"
                  - "countOfId"
                  - "sizeOfSharedStorage"
                  - "sizeOfMail"
                properties:
                  e-mail:
                    type: string
                    example: honggildong@kt.com
                  countOfId:
                    type: integer
                    description: 단위는 갯수
                  sizeOfSharedStorage:
                    type: integer
                    description: 단위는 Giga byte
                  sizeOfMail:
                    type: integer
                    description: 단위는 Giga byte
        response:
          "200":
            description: "정상 응답"
            exmaple: {
                        "result":"true",
                        "description":
                          {
                            "id":
                            {
                              "isChanged":"true",
                              "amount":20
                            },
                            "sharedStorage":
                            {
                              "isChanged":"true",
                              "amount":20
                            },
                            "mailStorage":
                            {
                              "isChanged":"true",
                              "amount":20
                            }
                          }
            }
            content:
              "application/json":
                schema:
                  required:
                    - "result"
                    - "description"
                  properties:
                    result:
                      type: enum
                      enum: ["succeed","fail"]
                    description:
                      type: object
                      required:
                        - id
                        - sharedStorage
                        - mailStorage
                      properties:
                        id:
                          type: object
                          required:
                            - isChanged
                            - amount
                          properties:
                            isChanged:
                              type: string
                              enum: ["true", "false"]
                            amount:
                              type: integer
                              description: 변경 분량
                        sharedStorage:
                          type: object
                          required:
                            - isChanged
                            - amount
                          properties:
                            isChanged:
                              type: string
                              enum: ["true", "false"]
                            amount:
                              type: integer
                              description: 변경 분량
                        mailStorage:
                          type: object
                          required:
                            - isChanged
                            - amount
                          properties:
                            isChanged:
                              type: string
                              enum: ["true", "false"]
                            amount:
                              type: integer
                              description: 변경 분량
                      
    delete:
      tags:
      - customer-management
      summary: 고객 탈퇴
      description: 고객 탈퇴처리를 위해 mem-sq에 해당하는 고객 레코드에 탈퇴일을 추가합니다. (Auth Key 값은 Basic 값 입니다.)
      requestBody:
        content:
          "application/json":
            schema:
              required:
                - "e-mail"
               properties:
                e-mail:
                  type: string
                  example: honggildong@kt.com
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responses'   
  /bill-list/date/{bill-date}:
    get:
      tags:
      - billing-management
      summary: 날짜별 사용정보 조회
      description: "bill-data까지의 사용량 정보를 얻기 위한 API 입니다."
      parameters:
      - name: bill-date
        in: path
        description: 조회하고 싶은 일자를 의미합니다.(해당 일의 사용 정보 회신. 해당 월 요금 기준으로 일할 계산)
        required: true
        schema:
          type: string
          format: yyyymmdd
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bills'
        default:
          $ref: '#/components/responses'
  /bill-list/customer/:
    get:
      tags:
      - billing-management
      summary: 사용자별 과금정보 조회
      description: 특정 고객에 대한 가입일부터 현재까지의 각 일별로 과금 정보를 회신합니다.
      requestBody:
        content:
          "application/json":
            schema:
              required:
                - "email"
              properties:
                "email" :
                  type: string
                  example : test@kt.com
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bill'
        default:
          $ref: '#/components/responses'
components:
  schemas:
    Bills:
      type: array
      items:
        $ref: '#/components/schemas/Bill'
    Bill:
      type: object
      properties:
        e-mail:
          type: string
          format: UTF-8
        bill-date:
          type: string
          format: yyyy-mm-dd
        free-period:
          type: string
          description: 시작일~종료일
          format: yyyymmdd~yyyymmdd
          example: "20210301~202010501"
        contract-discount-period:
          type: string
          description: 시작일~종료일
          format: yyyymmdd~yyyymmdd
          example: "20210301~202010501"
        common-volume-type:
          type: String
          description: 사용자가 추가한 공용 용량 크기 값(단위 Giga)
          example: "200"
        num-of-common-volume:
          type: String
          description: 사용자가 추가한 공용 용량 개수
          example: "1"
        email-volume-type:
          type: String
          description: 사용자가 추가한 전자메일 용량 크기 값(단위 Giga)
          example: "200"
        num-of-email-volume:
          type: String
          description: 사용자가 추가한 전자메일 용량 개수
          example: "1"
        pay-amt:
          type: integer
          description: 요금(KRW 단위)
          format: int32
    customer-body:
      type: object
      properties:
        e-mail:
          type: string
          description: 고객 식별 정보
          example: "honggildong@kt.com"
        common-volume-type:
          type: String
          description: 사용자가 추가한 공용 용량 크기 값(단위 Giga)
          example: "200"
        num-of-common-volume:
          type: String
          description: 사용자가 추가한 공용 용량 개수
          example: "1"
        email-volume-type:
          type: String
          description: 사용자가 추가한 전자메일 용량 크기 값(단위 Giga)
          example: "200"
        num-of-email-volume:
          type: String
          description: 사용자가 추가한 전자메일 용량 개수
          example: "1"
        contract-discount-period:
          type: string
          description: 약정할인 기간(시작일~종료일)
          format: yyyymmdd~yyyymmdd
          example: 20210301~202010501
        license-start-date:
          type: string
          description: Bizstore 상품신청 일자, 라이선스 시작 일 (yyyyMMdd)
          example: "20201210"
        license-states-cd:
          type: string
          description: 라이선스 상태(사용중 = 0, 해지 = 1, 정지 = 2)
          example: "0"
    status:
      required:
      - e-mail
      - reg-date
      - status
      - service-manager
      - service-engineer
      properties:
        mem-sq:
          description: 고객 식별정보
          example: M12345
        license-start-date:
          description: 고객 신청일(kt cloud bizstore 신청기준)
          format: yyyymmdd
          example: 20210428
        reg-date:
          description: 고객 신청일(비즈플레이 가입기준)
          format: yyyymmdd
          example: 20210428
        status:
          type: string
          description: 0(설치진행중) / 1(설치 완료) / 98(삭제진행중) / (삭제 완료 - delete되서 값 없으면 401 코드 또는 "99" 값으로 리턴)
          example: "1"
        service-manager:
          description: 서비스 담당자 정보 
          example: 홍길동(010-3333-4444,honggildong@kt.com)
          format: name(010-nnnn-nnnn,name@domain)
        service-engineer:
          description: 서비스 엔지니어 정보
          example: 홍길동(010-3333-4444,honggildong@kt.com)
          format: name(010-nnnn-nnnn,name@domain)
  responses:
    "200":
      description: 성공, OK, 유효한 요청에 대한 예상된 응답
    "201":
      description: 성공, Created, 자원 생성 완료
    "202":
      description: 성공, Accepted, 시간 지연
    "400":
      description: 실패, Bad request
    "401":
      description: 실패, Unauthorized, 유저 권한 없음
    "403":
      description: 실패, Forbidden, 유저 권한 문제
    "404":
      description: 실패, Not Found, 찾지 못함.
    "405":
      description: 실패, Method not allowed, Request의 endpoint와 resource가 유효하지 않음.
    "406":
      description: 실패, 무료체험 고객
