---
openapi: 3.0.3
info:
  title: KT Cloud Bizstore KT DaaS 서비스 API
  description: SSL 인증으로 진행합니다. 
  version: 3.0.1
servers:
- url: https://연동대상시스템의 URL
  description: https를 사용해야 하며 SSL 인증서를 KT Cloud 포탈에 공유해야합니다. 연동대상시스템의 IP는 하나로 지정하여 통신합니다.
paths:
  /status/:
    get:
      tags:
      - status-management
      summary: 서비스 상태값 조회
      description: 전체 고객에 대한 상태값 조회
      responses:
        "200":
          description: 유효한 요청에 대한 올바른 응답
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Statuses'
        default:
          description: 예상못한 에러
  /status/{email}:
    get:
      tags:
      - status-management
      summary: 서비스 상태값 조회
      description: 고객의 서비스 상태값 조회
      parameters:
        - name: "email"
          in: path
          required: true
          schema:
            type: string
            description: 개별 이메일을 조회할 때는 "email 주소"를 넣고, 전체 이메일을 조회할 때는 "all"을 넣습니다.
            example : test@kt.com
      responses:
        "200":
          description: 유효한 요청에 대한 올바른 응답
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        default:
          description: 예상못한 에러
  /customers/{email}:
    post:
      tags:
      - customer-management
      summary: 서비스 신청, SSO 연동 관련 API.
      description: 고객정보를 연동대상시스템으로 전달하여 서비스 신청.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        default:
          $ref : '#/components/responses'
    put:
      tags:
      - modify-management
      summary: 서비스 변경
      description: 최대 VM수 변경 요청
      parameters:
        - name: "email"
          in: path
          required: true
          schema:
            type: string
            example : test@kt.com
      requestBody:
        content:
          application/json:
            schema:
              required:
                - "max-amount"
              properties:
                "max-amount" :
                  type: integer
                  example : 150
      responses:
        "200":
          description: OK
        "400":
          description: 만약 현재 최대VM수가 100개이고 사용자가 VM을 100개 생성한 시점에서 80개로 변경하려고 할 때
                       400 error와 함께 '현재 VM의 수가 변경할 최대 VM의 수 보다 많습니다'로 응답.
                       동일하게 30개 미만으로 변경 시 400 error와 함께 '최소 변경 가능한 VM수는 30개 입니다.'로 응답
        default:
          $ref: '#/components/responses'
    delete:
      tags:
      - customer-management
      summary: 고객 탈퇴
      description: 고객 탈퇴처리를 위해 email에 해당하는 고객을 전달합니다.
      parameters:
        - name: "email"
          in: path
          required: true
          schema:
            type: string
            example : test@kt.com
      responses:
        default:
          $ref : '#/components/responses'
  /bill-list/{bill-date}:
    get:
      tags:
      - billing-management
      summary: 날짜별 사용정보 조회
      description: "bill-data까지의 사용량 정보를 얻기 위한 API 입니다."
      parameters:
      - name: bill-date
        in: path
        description: "해당 일의 사용 정보 회신, ex) 2021-08-20 이면, 2021-08-20 00:00 ~ 23:59 의, 사용량 회신(VM 이름, 해당 VM의 2021-08-20 00:00 ~ 23:59 동안의 사용시간), 
        이렇게 되면, 고객이 2021-08-01에서 2021-08-02까지 사용을 했을 때 일할 계산을 한다고 하면. 
        08-01의 VM 사용 수와 08-02의 VM 사용 수를 2(01 ~ 02 2일 썼으니...)로 나누고, 
        '2일/31일(8월은 31일까지 있음.)'을 곱한 후 VM 당 월 단가를 곱하여 과금. 단, 소수점 1째자리는 사사오입을 한다.(1954년 사사오입 개헌으로 대한민국 표준임...)
        또한, 당일 조회하는 경우 해당 시간까지의 사용량 전달"
        required: true
        schema:
          type: string
          format: yyyymmdd
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bills'
        default:
          $ref: '#/components/responses'
  /bill-list/{bill-date}/{email}:
    get:
      tags:
      - billing-management
      summary: 사용자별 과금정보 조회
      description: 특정 고객에 대한 가입일부터 현재까지의 각 일별로 과금 정보를 회신합니다.
      parameters:
      - name: bill-date
        in: path
        description: "해당 일의 사용 정보 회신, ex) 2021-08-20 이면, 2021-08-20 00:00 ~ 23:59 의, 사용량 회신(VM 이름, 해당 VM의 2021-08-20 00:00 ~ 23:59 동안의 사용시간), 
        이렇게 되면, 고객이 2021-08-01에서 2021-08-02까지 사용을 했을 때 일할 계산을 한다고 하면. 
        08-01의 VM 사용 수와 08-02의 VM 사용 수를 2(01 ~ 02 2일 썼으니...)로 나누고, 
        '2일/31일(8월은 31일까지 있음.)'을 곱한 후 VM 당 월 단가를 곱하여 과금. 단, 소수점 1째자리는 사사오입을 한다.(1954년 사사오입 개헌으로 대한민국 표준임...)
        또한, 당일 조회하는 경우 해당 시간까지의 사용량 전달"
        required: true
        schema:
          type: string
          format: yyyymmdd
      - name: email
        in: path
        schema:
          type: string
          format: yyyymmdd
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bill'
        default:
          $ref: '#/components/responses'
components:
  schemas:
    Customer:
      type: object
      properties:
        email:
          type: string
          description: 고객식별 정보 
          example: "honggildong@kt.com"
        business-name:
            type: string
            description: 사업자 이름
            example: "삼성"
        business-num:
            type: string 
            description: 사업자 번호 
            example: "123-345-2345"
        classification:
            type: string
            description: 상용과 POC 구분 "Commercial, POC"
            example: "POC"
        configuration:
            type: string
            description: 구성정보로 Pool이나 Dedicated로 표현. 
            example: "Pool"
        connect:
            type: string
            description: VM접속 방법 "외부망(SSL), 외부 인터넷망(HTTPS), 내부망(INSIDE)"
            example: "HTTPS"
        spec:
            type: string
            description: Spec 정보를 의미함. 2vCore x 4GB, 4vCore x 8GB, 8vCore x 16GB 중 1개(요금제에 따라서 결정됨.) 
            example: "4vCore x 8GB"
        max-amount:
            type: integer
            description: 생성 가능한 최대 VM 수(동시접속 VM 수)
            example: 150
        additional-disk:
            type: string
            description: 추가 디스크 "OS/10G, Data/20G"
            example: "OS/10G"
        domain:
            type: string
            description: 접속 도메인 ex)ucloud.ktvdi.co.kr
            example: "ucloud"
        company-name:
            type: string
            description: 회사명
            example: "KT"
        company-code:
            type: string
            description: 회사 코드
            example: "ktc"
    Bills:
      type: array
      items:
        $ref: '#/components/schemas/Bill'
    Bill:
      required:
      - bill-date
      - email
      - vm-status
      properties:
        bill-date:
          type: string
          format: yyyy-mm-dd
        email:
          type: string
          example: honggildong@kt.com
        vm-status:
          type: array
          items:
            $ref: '#/components/schemas/Vm'
    Vm:
      type: object
      properties:
        vm-name:
          type: string
          example: "NC0101"
        vm-spec:
          type: string 
          example: "2vCore x 4GB"
    Statuses:
      type: array
      items:
        $ref: '#/components/schemas/Status'
    Status:
      type: object
      properties:
        email:
          type: string
          description: 고객 식별정보
          example: "honggildong@kt.com"
        reg-date:
          description: 고객 신청일
          format: yyyymmdd
          example: 20210428
        start-date:
          description: 서비스 시작일
          format: yyyymmdd
          example: 20210818
        status:
          type: string
          description: 현재 사용 여부 회신
          example: ("설치 중","사용 중","삭제 진행 중","삭제 완료 중")
        location:
          type: string
          description: 고객이 기업DaaS에 접속하기 위한 URL 
          example: honggildong.vdi.kt.com
        announceMail:
          type: string
          description: location과 DaaS 구축이 완료되었을때 공지를 수신하는 메일
          example: honggildong@kt.com
  responses:
    "200":
      description: 성공, OK, 유효한 요청에 대한 예상된 응답
    "201":
      description: 성공, Created, 자원 생성 완료
    "202":
      description: 성공, Accepted, 시간 지연
    "400":
      description: 실패, Bad request, 상세한 실패 원인 회신 할 것.
    "401":
      description: 실패, Unauthorized, 유저 권한 없음
    "403":
      description: 실패, Forbidden, 유저 권한 문제
    "404":
      description: 실패, Not Found, 찾지 못함.
    "405":
      description: 실패, Method not allowed, Request의 endpoint와 resource가 유효하지 않음.
    "406":
      description: 실패, 무료체험 고객
