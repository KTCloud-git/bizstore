openapi: '3.0.2'
info:
  title: 고객 신청/변경/탈퇴 API
  version: '1.0.3'
servers:
  - url: https://gcloud.ktbizmeet.com
security:
  - ApiKeyAuth: []
paths:
  /customer-management/customers/:
    post:
      summary: 서비스 신청
      description: 서비스 신청 API
      tags:
        - regiser-customer
      parameters:
        - name: TIME_STAMP
          in: header
          required: true
          description: "api를 request를 발생시킨 시점을 의미"
          schema:
            type: string
            format: YYYYMMDDhhmmss
            example: 2022062114810
      requestBody:
        content:
          application/json:
            schema:      
              type: object
              properties:
                memSq:
                  type: string
                  description: KT Cloud가 보유하고 있는 고유의 고객 식별자 
                  example: M12345
                companyId:
                  type: string 
                  description: 회사 아이디, 중복되면 안됨. 
                  example: samsung
                companyName:
                  type: string 
                  description: 회사 명 
                  example: 삼성전자 
                managerId:
                  type: string 
                  description: 운영자 아이디
                  example: "geonhee.lee"
                licenseCount:
                  type: integer
                  description: 사용 고객수 
      responses:
        '200':
          description: redirect되지 않을 경우 상세 실패 사유와 함께 응답 회신 
          content:
            "application/json":
              schema:
                properties: 
                  result:
                    description: 실패 원인
                    type: string
                    example: "parameter name 오류에 따른 실패" 
        '302':
          description: 고객에게 보여줄 redirect html page
          headers:
            Location:
              schema:
                type: string
                description:  고객에게 노출할 redirect page url (고객별로 로그인된 페이지로 return할 것.)
                example: "https://meet.ktworks.co.kr/login/"  
        default:
          $ref: '#/components/responses'
    put:
      summary: 서비스 변경 
      parameters:
        - name: TIME_STAMP
          in: header
          required: true
          schema:
            type: string
            format: YYYYMMDDhhmmss
            example: 2022062114810
      requestBody:
        content:
          "application/json":
            schema:
              properties:
                memSq:
                  type: string
                  description: 고객 식별정보
                licenseCount:
                  type: integer
                  description: 고객 수 
      responses:
        '200':
          description: 서비스 변경 결과 전송 
          content:
            "application/json":
              schema:
                properties:
                  result:
                    type: string
                    enum: 
                    - "success"
                    - "fail"
                  description:
                    type: object 
                    properties:
                      subject:
                        type: string
                        description: "변경 대상"
                        example: "라이선스 수"
                      description:
                        type: string
                        description: "변경내용"
                        example: "3명에서 5명으로 변경"
        default:
          $ref: '#/components/responses'
    delete:
      summary: 고객 삭제 
      tags:
        - delete-customer
      parameters:
        - name: TIME_STAMP
          in: header
          required: true
          schema:
            type: string
            format: YYYYMMDDhhmmss
            example: 2022062114810
      requestBody:
        content:
          application/json:
            schema:      
              type: object
              properties:
                memSq:
                  type: string 
                  description: KT Cloud가 보유하고 있는 고유의 고객 식별자 
                  example: M12345
      responses:
        '200':
          description: 고객 삭제 결과 회신 
          content:
            "application/json":
              schema:
                properties: 
                  result:
                    description: 성공 및 실패 여부
                    type: string
                    enum:
                      - "success"
                      - "fail"
                    example: "success"
                  description:  
                    description: 실패시 실패 원인, 성공의 경우 공백 
                    type: string 
                    example: "parameter name이 잘못됨"
        default:
          $ref: '#/components/responses'
  /customer-management/domain/{domainName}:
    get:
      description: domain이 존재하는지 여부를 확인합니다.
      tags:
        - check-domain
      parameters:
        - name: TIME_STAMP
          in: header
          required: true
          schema:
            type: string
            format: YYYYMMDDhhmmss
            example: 2022062114810
        - name: domainName
          in: path
          description: 중복여부를 체크해야하는 도메인을 확인합니다. 
          required: true
          example:
            - "kt"
          schema:
            type: string
      responses:
        '200':
          description: 중복 확인 결과를 의미함.
          content:
            application/json:
              schema:
                properties:
                  result:
                    description: possible일 경우 중복값이 없다는 뜻고, impossible의 경우 중복값이 있다는 뜻임.
                    type: string
                    enum: 
                    - 'possible'
                    - 'impossible' 
                  description:
                    description: 상세한 impossible 사유를 출력하도록 해야함.
                    type: string
                    example: 
                    - '2022년 1월 20일 생성된 도메인과 중복됩니다.'
                    - '중복값이 아닙니다. 사용해도 좋습니다.'
        default:
          $ref: '#/components/responses'          
components:
  responses:
    '200':
      description: 성공, OK, 유효한 요청에 대한 예상된 응답
    '201':
      description: 성공, Created, 자원 생성 완료
    '202':
      description: 성공, Accepted, 시간 지연 
    '400':
      description: 실패, Bad request  
    '401':
      description: 실패, Unauthorized, API authentication error
    '403':
      description: 실패, Forbidden, 유저 권한 문제
    '404':
      description: 실패, Not Found, 찾지 못함. 
    '405':
      description: 실패, Method not allowed, Request의 endpoint와 resource가 유효하지 않음.
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X_API_KEY
